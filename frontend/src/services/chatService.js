import axiosInstance from "../redux/axiosInstance";

// üü¢ API g·ªçi chatbot Gemini
export const getChatResponse = async (message, product = null) => {
  try {
    const response = await axiosInstance.post("/chat", {
      message,
      product: product
        ? {
            name: product.name,
            price: product.price,
            sizes: product.sizes.map((s) => s.size).join(", "), // L·∫•y danh s√°ch size
          }
        : null,
    });
    return response.data.reply;
  } catch (error) {
    console.error("‚ùå L·ªói khi g·ªçi API chat:", error);
    return "Xin l·ªói, c√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!";
  }
};

// üü¢ API t∆∞ v·∫•n size theo chi·ªÅu cao & c√¢n n·∫∑ng
export const getSizeRecommendation = async (height, weight) => {
  try {
    const response = await axiosInstance.post("/recommend-size", {
      height,
      weight,
    });
    return response.data.recommendedSize;
  } catch (error) {
    console.error("‚ùå L·ªói khi g·ªçi API t∆∞ v·∫•n size:", error);
    return "Kh√¥ng t√¨m th·∫•y size ph√π h·ª£p.";
  }
};

// üü¢ API ch√†o m·ª´ng khi v√†o trang s·∫£n ph·∫©m
export const getWelcomeMessage = async (product) => {
  try {
    const response = await axiosInstance.post("/welcome-message", {
      productInfo: {
        name: product.name,
        price: product.price,
        sizes: product.sizes, // Gi·ªØ nguy√™n m·∫£ng size ƒë·ªÉ x·ª≠ l√Ω b√™n backend
      },
    });
    return response.data.reply;
  } catch (error) {
    console.error("‚ùå L·ªói khi g·ªçi API ch√†o m·ª´ng:", error);
    return "Xin l·ªói, c√≥ l·ªói x·∫£y ra khi l·∫•y th√¥ng tin s·∫£n ph·∫©m.";
  }
};
